{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{AppOwnership,UserInterfaceIdiom}from\"./Constants.types\";import ExponentConstants from\"./ExponentConstants\";export{AppOwnership,UserInterfaceIdiom};if(!ExponentConstants){console.warn(\"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\");}var manifest=null;if(ExponentConstants&&ExponentConstants.manifest){manifest=ExponentConstants.manifest;if(typeof manifest==='string'){manifest=JSON.parse(manifest);}}var _ref=ExponentConstants||{},name=_ref.name,constants=_objectWithoutProperties(_ref,[\"name\"]);export default _objectSpread({},constants,{manifest:manifest,deviceId:constants.installationId,linkingUrl:constants.linkingUri});","map":{"version":3,"sources":["/home/rick/dev/cool-home/node_modules/expo-constants/build/Constants.js"],"names":["AppOwnership","UserInterfaceIdiom","ExponentConstants","console","warn","manifest","JSON","parse","name","constants","deviceId","installationId","linkingUrl","linkingUri"],"mappings":"o6BAAA,OAASA,YAAT,CAAuBC,kBAAvB,yBACA,MAAOC,CAAAA,iBAAP,2BACA,OAASF,YAAT,CAAuBC,kBAAvB,EACA,GAAI,CAACC,iBAAL,CAAwB,CACpBC,OAAO,CAACC,IAAR,CAAa,wGAAb,EACH,CAED,GAAIC,CAAAA,QAAQ,CAAG,IAAf,CACA,GAAIH,iBAAiB,EAAIA,iBAAiB,CAACG,QAA3C,CAAqD,CACjDA,QAAQ,CAAGH,iBAAiB,CAACG,QAA7B,CACA,GAAI,MAAOA,CAAAA,QAAP,GAAoB,QAAxB,CAAkC,CAC9BA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAX,CACH,CACJ,C,SAC+BH,iBAAiB,EAAI,E,CAA7CM,I,MAAAA,I,CAASC,S,yCACjB,gCACOA,SADP,EAEIJ,QAAQ,CAARA,QAFJ,CAIIK,QAAQ,CAAED,SAAS,CAACE,cAJxB,CAKIC,UAAU,CAAEH,SAAS,CAACI,UAL1B","sourcesContent":["import { AppOwnership, UserInterfaceIdiom, } from './Constants.types';\nimport ExponentConstants from './ExponentConstants';\nexport { AppOwnership, UserInterfaceIdiom, };\nif (!ExponentConstants) {\n    console.warn(\"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\");\n}\n// On Android we pass the manifest in JSON form so this step is necessary\nlet manifest = null;\nif (ExponentConstants && ExponentConstants.manifest) {\n    manifest = ExponentConstants.manifest;\n    if (typeof manifest === 'string') {\n        manifest = JSON.parse(manifest);\n    }\n}\nconst { name, ...constants } = (ExponentConstants || {});\nexport default {\n    ...constants,\n    manifest,\n    // Legacy aliases\n    deviceId: constants.installationId,\n    linkingUrl: constants.linkingUri,\n};\n//# sourceMappingURL=Constants.js.map"]},"metadata":{},"sourceType":"module"}