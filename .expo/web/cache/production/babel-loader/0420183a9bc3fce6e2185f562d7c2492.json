{"ast":null,"code":"import _taggedTemplateLiteralLoose from\"@babel/runtime/helpers/taggedTemplateLiteralLoose\";function _templateObject(){var data=_taggedTemplateLiteralLoose([\"\\n  \",\"\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import{useNavigation}from\"@react-navigation/core\";import{UserContext}from\"../../store/user\";import{useQuery}from\"@apollo/react-hooks\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Button from\"react-native-web/dist/exports/Button\";import{Container}from\"../../components/Elements/Container/Container\";import{Group}from\"../../components/Features/Group/Group\";import gql from\"graphql-tag\";import{getUser}from\"../../graphql/queries\";import{ThingsContext}from\"../../store/things\";var USER=gql(_templateObject(),getUser);export var Home=function Home(){var navigation=useNavigation();var _React$useContext=React.useContext(UserContext),id=_React$useContext.state.id;var _React$useContext2=React.useContext(ThingsContext),_React$useContext2$st=_React$useContext2.state,things=_React$useContext2$st.things,loading=_React$useContext2$st.loading;var response=useQuery(USER,{variables:{id:id}});if(response.loading)return React.createElement(Text,null,\"Loading\");if(response.error)return React.createElement(Text,null,response.error.message);return React.createElement(Container,null,React.createElement(View,{style:{width:\"100%\"}},React.createElement(Button,{onPress:function onPress(){return navigation.navigate(\"createGroup\");},title:\"create group\"})),response.data.getUser.groups.items.map(function(props){return React.createElement(Group,{key:props.id,devices:props.devices||undefined,things:things,id:props.id,name:props.name,loading:loading});}));};","map":{"version":3,"sources":["/home/rick/dev/cool-home/src/screens/Home/Home.tsx"],"names":["React","useNavigation","UserContext","useQuery","Container","Group","gql","getUser","ThingsContext","USER","Home","navigation","useContext","id","state","things","loading","response","variables","error","message","width","navigate","data","groups","items","map","props","devices","undefined","name"],"mappings":"gPAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,OAASC,WAAT,wBACA,OAASC,QAAT,KAAyB,qBAAzB,C,mKAGA,OAASC,SAAT,qDACA,OAASC,KAAT,6CACA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,CACA,OAASC,OAAT,6BACA,OAASC,aAAT,0BAEA,GAAMC,CAAAA,IAAI,CAAGH,GAAH,mBACNC,OADM,CAAV,CAIA,MAAO,IAAMG,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACxB,GAAMC,CAAAA,UAAU,CAAGV,aAAa,EAAhC,CADwB,sBAIpBD,KAAK,CAACY,UAAN,CAAiBV,WAAjB,CAJoB,CAGbW,EAHa,mBAGtBC,KAHsB,CAGbD,EAHa,wBAOpBb,KAAK,CAACY,UAAN,CAAiBJ,aAAjB,CAPoB,0CAMtBM,KANsB,CAMbC,MANa,uBAMbA,MANa,CAMLC,OANK,uBAMLA,OANK,CASxB,GAAMC,CAAAA,QAAQ,CAAGd,QAAQ,CAAeM,IAAf,CAAqB,CAC5CS,SAAS,CAAE,CAAEL,EAAE,CAAFA,EAAF,CADiC,CAArB,CAAzB,CAIA,GAAII,QAAQ,CAACD,OAAb,CAAsB,MAAO,qBAAC,IAAD,gBAAP,CACtB,GAAIC,QAAQ,CAACE,KAAb,CAAoB,MAAO,qBAAC,IAAD,MAAOF,QAAQ,CAACE,KAAT,CAAeC,OAAtB,CAAP,CACpB,MACE,qBAAC,SAAD,MACE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLC,KAAK,CAAE,MADF,CADT,EAKE,oBAAC,MAAD,EACE,OAAO,CAAE,yBAAMV,CAAAA,UAAU,CAACW,QAAX,CAAoB,aAApB,CAAN,EADX,CAEE,KAAK,CAAC,cAFR,EALF,CADF,CAWGL,QAAQ,CAACM,IAAT,CAAehB,OAAf,CAAwBiB,MAAxB,CAAgCC,KAAhC,CAAuCC,GAAvC,CAA2C,SAAAC,KAAK,QAC/C,qBAAC,KAAD,EACE,GAAG,CAAEA,KAAK,CAAEd,EADd,CAEE,OAAO,CAAEc,KAAK,CAAEC,OAAP,EAAkBC,SAF7B,CAGE,MAAM,CAAEd,MAHV,CAIE,EAAE,CAAEY,KAAK,CAAEd,EAJb,CAKE,IAAI,CAAEc,KAAK,CAAEG,IALf,CAME,OAAO,CAAEd,OANX,EAD+C,EAAhD,CAXH,CADF,CAwBD,CAvCM","sourcesContent":["import React from \"react\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { UserContext } from \"../../store/user\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GetUserQuery } from \"../../graphql/API\";\nimport { Text, View, Button } from \"react-native\";\nimport { Container } from \"../../components/Elements/Container/Container\";\nimport { Group } from \"../../components/Features/Group/Group\";\nimport gql from \"graphql-tag\";\nimport { getUser } from \"../../graphql/queries\";\nimport { ThingsContext } from \"../../store/things\";\n\nconst USER = gql`\n  ${getUser}\n`;\n\nexport const Home = () => {\n  const navigation = useNavigation();\n  const {\n    state: { id }\n  } = React.useContext(UserContext);\n  const {\n    state: { things, loading }\n  } = React.useContext(ThingsContext);\n\n  const response = useQuery<GetUserQuery>(USER, {\n    variables: { id }\n  });\n\n  if (response.loading) return <Text>Loading</Text>;\n  if (response.error) return <Text>{response.error.message}</Text>;\n  return (\n    <Container>\n      <View\n        style={{\n          width: \"100%\"\n        }}\n      >\n        <Button\n          onPress={() => navigation.navigate(\"createGroup\")}\n          title=\"create group\"\n        />\n      </View>\n      {response.data!.getUser!.groups!.items!.map(props => (\n        <Group\n          key={props!.id}\n          devices={props!.devices || undefined}\n          things={things}\n          id={props!.id}\n          name={props!.name}\n          loading={loading}\n        />\n      ))}\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}