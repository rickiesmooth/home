{"ast":null,"code":"import{apply}from\"ramda\";export var debounce=function debounce(timeMs,fn){var timeout;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}var later=function later(){timeout=undefined;apply(fn,args);};clearTimeout(timeout);timeout=setTimeout(later,timeMs);return timeout;};};export function throttle(fn,ms){var wait=false;return function(){if(!wait){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}apply(fn,args);wait=true;setTimeout(function(){wait=false;},ms);}};}","map":{"version":3,"sources":["/home/rick/dev/cool-home/src/utils/throttle.ts"],"names":["apply","debounce","timeMs","fn","timeout","args","later","undefined","clearTimeout","setTimeout","throttle","ms","wait"],"mappings":"AAAA,OAASA,KAAT,KAAsB,OAAtB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAIC,MAAJ,CAAoBC,EAApB,CAA8C,CACpE,GAAIC,CAAAA,OAAJ,CAEA,MAAO,WAA6B,+BAAjBC,IAAiB,0CAAjBA,IAAiB,wBAClC,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClBF,OAAO,CAAGG,SAAV,CACAP,KAAK,CAACG,EAAD,CAAKE,IAAL,CAAL,CACD,CAHD,CAIAG,YAAY,CAACJ,OAAD,CAAZ,CACAA,OAAO,CAAGK,UAAU,CAACH,KAAD,CAAQJ,MAAR,CAApB,CAEA,MAAOE,CAAAA,OAAP,CACD,CATD,CAUD,CAbM,CAeP,MAAO,SAASM,CAAAA,QAAT,CAAkBP,EAAlB,CAA+CQ,EAA/C,CAA2D,CAChE,GAAIC,CAAAA,IAAI,CAAG,KAAX,CAEA,MAAO,WAA6B,CAClC,GAAI,CAACA,IAAL,CAAW,gCADMP,IACN,+CADMA,IACN,0BACTL,KAAK,CAACG,EAAD,CAAKE,IAAL,CAAL,CACAO,IAAI,CAAG,IAAP,CACAH,UAAU,CAAC,UAAM,CACfG,IAAI,CAAG,KAAP,CACD,CAFS,CAEPD,EAFO,CAAV,CAGD,CACF,CARD,CASD","sourcesContent":["import { apply } from \"ramda\";\n\nexport const debounce = <T>(timeMs: number, fn: (args: T) => void) => {\n  let timeout: NodeJS.Timeout | undefined;\n\n  return function(...args: unknown[]) {\n    const later = () => {\n      timeout = undefined;\n      apply(fn, args);\n    };\n    clearTimeout(timeout as NodeJS.Timeout);\n    timeout = setTimeout(later, timeMs);\n\n    return timeout;\n  };\n};\n\nexport function throttle(fn: (args: unknown) => void, ms: number) {\n  let wait = false;\n\n  return function(...args: unknown[]) {\n    if (!wait) {\n      apply(fn, args);\n      wait = true;\n      setTimeout(() => {\n        wait = false;\n      }, ms);\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}