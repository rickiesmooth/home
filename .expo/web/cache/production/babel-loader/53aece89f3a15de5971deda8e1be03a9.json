{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{PureComponent}from'react';import PropTypes from'prop-types';import createIconSet from\"./createIconSet\";export default function createMultiStyleIconSet(styles){var optionsInput=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var styleNames=Object.keys(styles);if(styleNames.length===0){throw new Error('You need to add at least one style');}var options=_objectSpread({defaultStyle:styleNames[0],fallbackFamily:function fallbackFamily(_unused){return styleNames[0];},glyphValidator:function glyphValidator(_unused,__unused){return true;}},optionsInput);var iconSets=styleNames.reduce(function(acc,name){var style=styles[name];acc[name]=createIconSet(style.glyphMap||{},style.fontFamily||'',style.fontFile||'',style.fontStyle||{});return acc;},{});function styleFromProps(props){return Object.keys(props).reduce(function(result,propName){return styleNames.indexOf(propName)!==-1&&props[propName]===true?propName:result;},options.defaultStyle);}function getIconSetForProps(props){var name=props.name;var style=styleFromProps(props);if(options.glyphValidator(name,style))return iconSets[style];var family=options.fallbackFamily(name);if(styleNames.indexOf(family)===-1){return options.defaultStyle;}return iconSets[family];}function selectIconClass(iconSet,iconClass){return iconClass.length>0?iconSet[iconClass]:iconSet;}function reduceProps(props){return Object.keys(props).reduce(function(acc,prop){if(styleNames.indexOf(prop)===-1){acc[prop]=props[prop];}return acc;},{});}function getStyledIconSet(style){var name=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';if(styleNames.indexOf(style)===-1){return iconSets[options.defaultStyle];}return!name?iconSets[styleFromProps(_defineProperty({},style,true))]:getIconSetForProps(_defineProperty({name:name},style,true));}function getFontFamily(){var style=arguments.length>0&&arguments[0]!==undefined?arguments[0]:options.defaultStyle;return getStyledIconSet(style).getFontFamily();}function getRawGlyphMap(){var style=arguments.length>0&&arguments[0]!==undefined?arguments[0]:options.defaultStyle;return getStyledIconSet(style).getRawGlyphMap();}function hasIcon(name){var style=arguments.length>1&&arguments[1]!==undefined?arguments[1]:options.defaultStyle;return options.glyphValidator(name,style);}function createStyledIconClass(){var selectClass=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var IconClass=function(_PureComponent){_inherits(IconClass,_PureComponent);function IconClass(){_classCallCheck(this,IconClass);return _possibleConstructorReturn(this,_getPrototypeOf(IconClass).apply(this,arguments));}_createClass(IconClass,[{key:\"render\",value:function render(){var selectedIconSet=getIconSetForProps(this.props);var SelectedIconClass=selectIconClass(selectedIconSet,selectClass);var props=reduceProps(this.props);return React.createElement(SelectedIconClass,props);}}]);return IconClass;}(PureComponent);IconClass.propTypes=styleNames.reduce(function(acc,name){acc[name]=PropTypes.bool;return acc;},{});IconClass.defaultProps=styleNames.reduce(function(acc,name){acc[name]=false;return acc;},{});IconClass.font=Object.values(styles).reduce(function(acc,style){acc[style.fontFamily]=style.fontFile;return acc;},{});IconClass.StyledIconSet=getStyledIconSet;IconClass.getFontFamily=getFontFamily;IconClass.getRawGlyphMap=getRawGlyphMap;IconClass.hasIcon=hasIcon;return IconClass;}var Icon=createStyledIconClass();Icon.Button=createStyledIconClass('Button');return Icon;}","map":{"version":3,"sources":["/home/rick/dev/cool-home/node_modules/@expo/vector-icons/build/createMultiStyleIconSet.js"],"names":["React","PureComponent","PropTypes","createIconSet","createMultiStyleIconSet","styles","optionsInput","styleNames","Object","keys","length","Error","options","defaultStyle","fallbackFamily","_unused","glyphValidator","__unused","iconSets","reduce","acc","name","style","glyphMap","fontFamily","fontFile","fontStyle","styleFromProps","props","result","propName","indexOf","getIconSetForProps","family","selectIconClass","iconSet","iconClass","reduceProps","prop","getStyledIconSet","getFontFamily","getRawGlyphMap","hasIcon","createStyledIconClass","selectClass","IconClass","selectedIconSet","SelectedIconClass","createElement","propTypes","bool","defaultProps","font","values","StyledIconSet","Icon","Button"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport createIconSet from './createIconSet';\nexport default function createMultiStyleIconSet(styles, optionsInput = {}) {\n    const styleNames = Object.keys(styles);\n    if (styleNames.length === 0) {\n        throw new Error('You need to add at least one style');\n    }\n    const options = {\n        defaultStyle: styleNames[0],\n        fallbackFamily: (_unused) => styleNames[0],\n        glyphValidator: (_unused, __unused) => true,\n        ...optionsInput,\n    };\n    const iconSets = styleNames.reduce((acc, name) => {\n        const style = styles[name];\n        acc[name] = createIconSet(style.glyphMap || {}, style.fontFamily || '', style.fontFile || '', style.fontStyle || {});\n        return acc;\n    }, {});\n    function styleFromProps(props) {\n        return Object.keys(props).reduce((result, propName) => styleNames.indexOf(propName) !== -1 && props[propName] === true\n            ? propName\n            : result, options.defaultStyle);\n    }\n    function getIconSetForProps(props) {\n        const { name } = props;\n        const style = styleFromProps(props);\n        if (options.glyphValidator(name, style))\n            return iconSets[style];\n        const family = options.fallbackFamily(name);\n        if (styleNames.indexOf(family) === -1) {\n            return options.defaultStyle;\n        }\n        return iconSets[family];\n    }\n    function selectIconClass(iconSet, iconClass) {\n        return iconClass.length > 0 ? iconSet[iconClass] : iconSet;\n    }\n    function reduceProps(props) {\n        return Object.keys(props).reduce((acc, prop) => {\n            if (styleNames.indexOf(prop) === -1) {\n                acc[prop] = props[prop];\n            }\n            return acc;\n        }, {});\n    }\n    function getStyledIconSet(style, name = '') {\n        if (styleNames.indexOf(style) === -1) {\n            return iconSets[options.defaultStyle];\n        }\n        return !name\n            ? iconSets[styleFromProps({ [style]: true })]\n            : getIconSetForProps({ name, [style]: true });\n    }\n    function getFontFamily(style = options.defaultStyle) {\n        return getStyledIconSet(style).getFontFamily();\n    }\n    function getRawGlyphMap(style = options.defaultStyle) {\n        return getStyledIconSet(style).getRawGlyphMap();\n    }\n    function hasIcon(name, style = options.defaultStyle) {\n        return options.glyphValidator(name, style);\n    }\n    function createStyledIconClass(selectClass = '') {\n        class IconClass extends PureComponent {\n            render() {\n                const selectedIconSet = getIconSetForProps(this.props);\n                const SelectedIconClass = selectIconClass(selectedIconSet, selectClass);\n                const props = reduceProps(this.props);\n                return React.createElement(SelectedIconClass, props);\n            }\n        }\n        IconClass.propTypes = styleNames.reduce((acc, name) => {\n            acc[name] = PropTypes.bool;\n            return acc;\n        }, {});\n        IconClass.defaultProps = styleNames.reduce((acc, name) => {\n            acc[name] = false;\n            return acc;\n        }, {});\n        IconClass.font = Object.values(styles).reduce((acc, style) => {\n            acc[style.fontFamily] = style.fontFile;\n            return acc;\n        }, {});\n        IconClass.StyledIconSet = getStyledIconSet;\n        IconClass.getFontFamily = getFontFamily;\n        IconClass.getRawGlyphMap = getRawGlyphMap;\n        IconClass.hasIcon = hasIcon;\n        return IconClass;\n    }\n    const Icon = createStyledIconClass();\n    Icon.Button = createStyledIconClass('Button');\n    return Icon;\n}\n//# sourceMappingURL=createMultiStyleIconSet.js.map"]},"metadata":{},"sourceType":"module"}