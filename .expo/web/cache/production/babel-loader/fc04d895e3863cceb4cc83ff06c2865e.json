{"ast":null,"code":"export var ACTION_TYPES;(function(ACTION_TYPES){ACTION_TYPES[\"THINGS_INIT\"]=\"INIT_THINGS\";ACTION_TYPES[\"THINGS_FETCH\"]=\"THINGS_FETCH\";ACTION_TYPES[\"PROPERTIES_FETCH\"]=\"PROPERTIES_FETCH\";ACTION_TYPES[\"PROPERTIES_UPDATE\"]=\"PROPERTIES_UPDATE\";ACTION_TYPES[\"USER_LOGIN\"]=\"USER_LOGIN\";})(ACTION_TYPES||(ACTION_TYPES={}));","map":{"version":3,"sources":["/home/rick/dev/cool-home/src/store/things/interfaces.ts"],"names":["ACTION_TYPES"],"mappings":"AAsFA,UAAYA,CAAAA,YAAZ,C,UAAYA,Y,EAAAA,Y,8BAAAA,Y,gCAAAA,Y,wCAAAA,Y,0CAAAA,Y,+BAAAA,Y,GAAAA,Y","sourcesContent":["export interface ThingsContextInterface {\n  state: State;\n  actions: ThingsActions;\n}\n\nexport type ThingRaw = {\n  [\"@context\"]: string;\n  [\"@type\"]: string[];\n  actions: {};\n  base: string;\n  description: string;\n  iconHref: string | null;\n  id: string;\n  layoutIndex: number;\n  links: ThingLinksRaw[];\n  properties: ThingPropertiesRaw;\n  selectedCapability: string;\n  title: string;\n  type: string;\n  href: string;\n};\n\ntype ThingPropertyRaw = {\n  links: ThingLinksRaw[];\n  maximum: number;\n  minimum: number;\n  title: string;\n  unit: string;\n  [\"@type\"]: string;\n};\n\nexport type ThingPropertiesRaw = {\n  on: ThingPropertyRaw;\n  level: ThingPropertyRaw;\n  colorTemperature: ThingPropertyRaw;\n};\n\ntype ThingLinksRaw = {\n  rel: string;\n  href: string;\n};\n\nexport type ThingPropertyNormalized = {\n  link: string;\n  title: string;\n  minimum: number;\n  maximum: number;\n  [\"@type\"]: string;\n};\n\nexport type ThingModelProperties = {\n  on: ThingPropertyNormalized;\n  colorTemperature: ThingPropertyNormalized;\n  level: ThingPropertyNormalized;\n};\n\nexport type ThingModelValues = {\n  on: boolean;\n  colorTemperature: number;\n  level: number;\n};\n\n// export thies!\nexport interface ThingModel {\n  id: string;\n  title: string;\n  href: string;\n  values: Partial<ThingModelValues>; // <== dynamic properties (e.g. currentValue)\n  properties: Partial<ThingModelProperties>; // <== static properties that relate to values (e.g. minmax)\n  closingWs: boolean;\n  ws?: WebSocket;\n  base: string;\n  wsBackoff: number;\n  connected: boolean;\n  fetchValues(): void;\n  updateThing(val: Partial<ThingModelValues>): void;\n  updateCallback(thing: ThingModel): void;\n}\n\nexport type State = {\n  things: ThingModel[];\n  loading: boolean;\n  error: string | null;\n};\n\n// @TODO move to ./actions\nexport enum ACTION_TYPES {\n  THINGS_INIT = \"INIT_THINGS\",\n  THINGS_FETCH = \"THINGS_FETCH\",\n  PROPERTIES_FETCH = \"PROPERTIES_FETCH\",\n  PROPERTIES_UPDATE = \"PROPERTIES_UPDATE\",\n  USER_LOGIN = \"USER_LOGIN\"\n}\n\nexport type Action =\n  | {\n      type: ACTION_TYPES.THINGS_INIT;\n      data: {\n        things?: ThingModel[];\n        error?: string;\n      };\n    }\n  | {\n      type: ACTION_TYPES.PROPERTIES_UPDATE;\n      data: ThingModel;\n    }\n  | {\n      type: ACTION_TYPES.USER_LOGIN;\n      data: boolean;\n    };\n\nexport type ThingsActions = {\n  login(data: boolean): void;\n  initThings(): void;\n  updateThing(thing: ThingModel, values: Partial<ThingModelValues>): void;\n};\n"]},"metadata":{},"sourceType":"module"}