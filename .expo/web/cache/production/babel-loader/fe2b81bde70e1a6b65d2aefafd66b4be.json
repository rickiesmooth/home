{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from\"react\";import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";var applyNativeMethods=require(\"react-native-web/dist/modules/applyNativeMethods\").default;var TRACK_SIZE=4;var THUMB_SIZE=20;var THUMB_TOUCH_SIZE=40;var DEFAULT_ANIMATION_CONFIGS={spring:{friction:7,tension:100},timing:{duration:150,easing:Easing.inOut(Easing.ease),delay:0}};var Slider=function(_React$Component){_inherits(Slider,_React$Component);function Slider(props){var _this;_classCallCheck(this,Slider);_this=_possibleConstructorReturn(this,_getPrototypeOf(Slider).call(this,props));_this._panResponder=null;_this._previousLeft=null;_this._store={};_this.state={containerSize:{width:0,height:0},trackSize:{width:0,height:0},thumbSize:{width:0,height:0},allMeasured:false,animatedValue:new Animated.Value(_this.props.value)};_this._handleStartShouldSetPanResponder=function(e,gestureState){return _this._thumbHitTest(e,gestureState);};_this._handlePanResponderGrant=function(_e,_gestureState){_this._previousLeft=_this._getThumbLeft(_this._getCurrentValue());if(_this.props.onSlidingStart){_this.props.onSlidingStart();}};_this._handlePanResponderMove=function(_e,gestureState){if(_this.props.disabled){return;}_this._setCurrentValue(_this._getValue(gestureState));if(_this.props.onValueChange){_this.props.onValueChange(_this._getCurrentValue());}};_this._handlePanResponderEnd=function(e,gestureState){if(_this.props.disabled){return;}_this._setCurrentValue(_this._getValue(gestureState));if(_this.props.onSlidingComplete){_this.props.onSlidingComplete(_this._getCurrentValue());}};_this._measureContainer=function(x){_this._handleMeasure(\"containerSize\",x);};_this._measureTrack=function(x){_this._handleMeasure(\"trackSize\",x);};_this._measureThumb=function(x){_this._handleMeasure(\"thumbSize\",x);};_this._handleMeasure=function(name,x){var _x$nativeEvent$layout=x.nativeEvent.layout,width=_x$nativeEvent$layout.width,height=_x$nativeEvent$layout.height;var size={width:width,height:height};var currentSize=_this._store[name];if(currentSize&&width===currentSize.width&&height===currentSize.height){return;}_this._store[name]=size;var store=_this._store;if(store.containerSize&&store.trackSize&&store.thumbSize){_this.setState(_objectSpread({},_this.state,{containerSize:store.containerSize,trackSize:store.trackSize,thumbSize:store.thumbSize,allMeasured:true}));}};_this._getRatio=function(value){return(value-_this.props.minimumValue)/(_this.props.maximumValue-_this.props.minimumValue);};_this._getThumbLeft=function(value){var nonRtlRatio=_this._getRatio(value);var ratio=I18nManager.isRTL?1-nonRtlRatio:nonRtlRatio;return ratio*(_this.state.containerSize.width-_this.state.thumbSize.width);};_this._getValue=function(gestureState){var length=_this.state.containerSize.width-_this.state.thumbSize.width;var thumbLeft=_this._previousLeft+gestureState.dx;var nonRtlRatio=thumbLeft/length;var ratio=I18nManager.isRTL?1-nonRtlRatio:nonRtlRatio;if(_this.props.step){return Math.max(_this.props.minimumValue,Math.min(_this.props.maximumValue,_this.props.minimumValue+Math.round(ratio*(_this.props.maximumValue-_this.props.minimumValue)/_this.props.step)*_this.props.step));}return Math.max(_this.props.minimumValue,Math.min(_this.props.maximumValue,ratio*(_this.props.maximumValue-_this.props.minimumValue)+_this.props.minimumValue));};_this._getCurrentValue=function(){var val=_this.state.animatedValue._value;return val;};_this._setCurrentValue=function(value){_this.state.animatedValue.setValue(value);};_this._setCurrentValueAnimated=function(value){var animationType=_this.props.animationType;var animationConfig=_objectSpread({},DEFAULT_ANIMATION_CONFIGS[animationType],{toValue:value});Animated[animationType](_this.state.animatedValue,animationConfig).start();};_this._getTouchOverflowSize=function(){var _this$state=_this.state,allMeasured=_this$state.allMeasured,thumbSize=_this$state.thumbSize,containerSize=_this$state.containerSize;var size={};if(allMeasured===true){size.width=Math.max(0,THUMB_TOUCH_SIZE-thumbSize.width);size.height=Math.max(0,THUMB_TOUCH_SIZE-containerSize.height);}return size;};_this._getTouchOverflowStyle=function(){var _this$_getTouchOverfl=_this._getTouchOverflowSize(),width=_this$_getTouchOverfl.width,height=_this$_getTouchOverfl.height;var touchOverflowStyle={};if(width!==undefined&&height!==undefined){var verticalMargin=-height/2;touchOverflowStyle.marginTop=verticalMargin;touchOverflowStyle.marginBottom=verticalMargin;var horizontalMargin=-width/2;touchOverflowStyle.marginLeft=horizontalMargin;touchOverflowStyle.marginRight=horizontalMargin;}if(_this.props.debugTouchArea===true){touchOverflowStyle.backgroundColor=\"orange\";touchOverflowStyle.opacity=0.5;}return touchOverflowStyle;};_this._thumbHitTest=function(_ref){var nativeEvent=_ref.nativeEvent;var thumbTouchRect=_this._getThumbTouchRect();var offset=getOffset();return thumbTouchRect.containsPoint(nativeEvent.locationX-offset.x,nativeEvent.locationY-offset.y);};_this._getThumbTouchRect=function(){var _this$state2=_this.state,thumbSize=_this$state2.thumbSize,containerSize=_this$state2.containerSize;var _this$_getTouchOverfl2=_this._getTouchOverflowSize(),_this$_getTouchOverfl3=_this$_getTouchOverfl2.width,width=_this$_getTouchOverfl3===void 0?0:_this$_getTouchOverfl3,_this$_getTouchOverfl4=_this$_getTouchOverfl2.height,height=_this$_getTouchOverfl4===void 0?0:_this$_getTouchOverfl4;return new Rect(width/2+_this._getThumbLeft(_this._getCurrentValue())+(thumbSize.width-THUMB_TOUCH_SIZE)/2,height/2+(containerSize.height-THUMB_TOUCH_SIZE)/2,THUMB_TOUCH_SIZE,THUMB_TOUCH_SIZE);};_this._renderDebugThumbTouchRect=function(thumbLeft){var thumbTouchRect=_this._getThumbTouchRect();var positionStyle={left:thumbLeft,top:thumbTouchRect.y,width:thumbTouchRect.width,height:thumbTouchRect.height};return React.createElement(Animated.View,{pointerEvents:\"none\",style:[defaultStyles.debugThumbTouchArea,positionStyle]});};_this._panResponder=PanResponder.create({onStartShouldSetPanResponder:_this._handleStartShouldSetPanResponder,onMoveShouldSetPanResponder:_this._handleMoveShouldSetPanResponder,onPanResponderGrant:_this._handlePanResponderGrant,onPanResponderMove:_this._handlePanResponderMove,onPanResponderRelease:_this._handlePanResponderEnd,onPanResponderTerminationRequest:_this._handlePanResponderRequestEnd,onPanResponderTerminate:_this._handlePanResponderEnd});return _this;}_createClass(Slider,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){var newValue=nextProps.value;if(this.props.value!==newValue){if(this.props.animateTransitions){this._setCurrentValueAnimated(newValue);}else{this._setCurrentValue(newValue);}}}},{key:\"render\",value:function render(){var _this$props=this.props,minimumValue=_this$props.minimumValue,maximumValue=_this$props.maximumValue,minimumTrackTintColor=_this$props.minimumTrackTintColor,maximumTrackTintColor=_this$props.maximumTrackTintColor,thumbTintColor=_this$props.thumbTintColor,style=_this$props.style,debugTouchArea=_this$props.debugTouchArea,animationType=_this$props.animationType,other=_objectWithoutProperties(_this$props,[\"minimumValue\",\"maximumValue\",\"minimumTrackTintColor\",\"maximumTrackTintColor\",\"thumbTintColor\",\"style\",\"debugTouchArea\",\"animationType\"]);var _this$state3=this.state,containerSize=_this$state3.containerSize,thumbSize=_this$state3.thumbSize,allMeasured=_this$state3.allMeasured;var thumbLeft=this.state.animatedValue.interpolate({inputRange:[minimumValue,maximumValue],outputRange:I18nManager.isRTL?[0,-(containerSize.width-thumbSize.width)]:[0,containerSize.width-thumbSize.width]});var minimumTrackWidth=this.state.animatedValue.interpolate({inputRange:[minimumValue,maximumValue],outputRange:[0,containerSize.width-thumbSize.width]});var valueVisibleStyle={};if(!allMeasured){valueVisibleStyle.opacity=0;}var minimumTrackStyle=_objectSpread({position:\"absolute\",width:Animated.add(minimumTrackWidth,thumbSize.width/2),backgroundColor:minimumTrackTintColor},valueVisibleStyle);var touchOverflowStyle=this._getTouchOverflowStyle();return React.createElement(View,_extends({},other,{onLayout:this._measureContainer,style:[defaultStyles.container,style]}),React.createElement(View,{onLayout:this._measureTrack,style:[{backgroundColor:maximumTrackTintColor},defaultStyles.track]}),React.createElement(Animated.View,{style:[defaultStyles.track,minimumTrackStyle]}),React.createElement(Animated.View,{onLayout:this._measureThumb,style:[{backgroundColor:thumbTintColor||minimumTrackTintColor},defaultStyles.thumb,_objectSpread({transform:[{translateX:thumbLeft},{translateY:0}]},valueVisibleStyle)]}),React.createElement(View,_extends({style:[defaultStyles.touchArea,touchOverflowStyle]},this._panResponder.panHandlers),debugTouchArea===true&&this._renderDebugThumbTouchRect(thumbLeft)));}},{key:\"_getPropsForComponentUpdate\",value:function _getPropsForComponentUpdate(props){var value=props.value,onValueChange=props.onValueChange,onSlidingStart=props.onSlidingStart,onSlidingComplete=props.onSlidingComplete,style=props.style,otherProps=_objectWithoutProperties(props,[\"value\",\"onValueChange\",\"onSlidingStart\",\"onSlidingComplete\",\"style\"]);return otherProps;}},{key:\"_handleMoveShouldSetPanResponder\",value:function _handleMoveShouldSetPanResponder(){return false;}},{key:\"_handlePanResponderRequestEnd\",value:function _handlePanResponderRequestEnd(){return false;}}]);return Slider;}(React.Component);Slider.defaultProps={value:0,minimumValue:0,maximumValue:1,step:0,minimumTrackTintColor:\"#009688\",maximumTrackTintColor:\"#939393\",debugTouchArea:false,animationType:\"timing\",animateTransitions:false};var defaultStyles=StyleSheet.create({container:{height:40,justifyContent:\"center\"},track:{height:TRACK_SIZE,borderRadius:TRACK_SIZE/2},thumb:{position:\"absolute\",width:THUMB_SIZE,height:THUMB_SIZE,borderRadius:THUMB_SIZE/2},touchArea:{position:\"absolute\",backgroundColor:\"transparent\",top:0,left:0,right:0,bottom:0},debugThumbTouchArea:{position:\"absolute\",backgroundColor:\"green\",opacity:0.5}});export default applyNativeMethods(Slider);var Rect=function(){function Rect(x,y,width,height){_classCallCheck(this,Rect);this.x=x;this.y=y;this.width=width;this.height=height;}_createClass(Rect,[{key:\"containsPoint\",value:function containsPoint(x,y){return x>=this.x&&y>=this.y&&x<=this.x+this.width&&y<=this.y+this.height;}}]);return Rect;}();function getOffset(){if(document.documentElement&&document.documentElement.scrollTop){return{x:document.documentElement.scrollLeft,y:document.documentElement.scrollTop};}return{x:document.body.scrollLeft,y:document.body.scrollTop};}","map":{"version":3,"sources":["/home/rick/dev/cool-home/src/components/Elements/Slider/Slider.web.tsx"],"names":["React","applyNativeMethods","require","default","TRACK_SIZE","THUMB_SIZE","THUMB_TOUCH_SIZE","DEFAULT_ANIMATION_CONFIGS","spring","friction","tension","timing","duration","easing","Easing","inOut","ease","delay","Slider","props","_panResponder","_previousLeft","_store","state","containerSize","width","height","trackSize","thumbSize","allMeasured","animatedValue","Animated","Value","value","_handleStartShouldSetPanResponder","e","gestureState","_thumbHitTest","_handlePanResponderGrant","_e","_gestureState","_getThumbLeft","_getCurrentValue","onSlidingStart","_handlePanResponderMove","disabled","_setCurrentValue","_getValue","onValueChange","_handlePanResponderEnd","onSlidingComplete","_measureContainer","x","_handleMeasure","_measureTrack","_measureThumb","name","nativeEvent","layout","size","currentSize","store","setState","_getRatio","minimumValue","maximumValue","nonRtlRatio","ratio","I18nManager","isRTL","length","thumbLeft","dx","step","Math","max","min","round","val","_value","setValue","_setCurrentValueAnimated","animationType","animationConfig","toValue","start","_getTouchOverflowSize","_getTouchOverflowStyle","touchOverflowStyle","undefined","verticalMargin","marginTop","marginBottom","horizontalMargin","marginLeft","marginRight","debugTouchArea","backgroundColor","opacity","thumbTouchRect","_getThumbTouchRect","offset","getOffset","containsPoint","locationX","locationY","y","Rect","_renderDebugThumbTouchRect","positionStyle","left","top","defaultStyles","debugThumbTouchArea","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","_handleMoveShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminationRequest","_handlePanResponderRequestEnd","onPanResponderTerminate","nextProps","newValue","animateTransitions","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","style","other","interpolate","inputRange","outputRange","minimumTrackWidth","valueVisibleStyle","minimumTrackStyle","position","add","container","track","thumb","transform","translateX","translateY","touchArea","panHandlers","otherProps","Component","defaultProps","StyleSheet","justifyContent","borderRadius","right","bottom","document","documentElement","scrollTop","scrollLeft","body"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Animated,\n  Easing,\n  PanResponder,\n  StyleSheet,\n  View,\n  I18nManager,\n  PanResponderInstance,\n  PanResponderGestureState,\n  SliderProps,\n  PanResponderCallbacks,\n  LayoutChangeEvent,\n  ViewStyle,\n  LayoutRectangle\n} from \"react-native\";\n\nconst applyNativeMethods = require(\"react-native-web/dist/modules/applyNativeMethods\")\n  .default;\nconst TRACK_SIZE = 4;\nconst THUMB_SIZE = 20;\nconst THUMB_TOUCH_SIZE = 40;\n\ntype ANIMATION_TYPES = \"spring\" | \"timing\";\n\nconst DEFAULT_ANIMATION_CONFIGS: Record<ANIMATION_TYPES, any> = {\n  spring: {\n    friction: 7,\n    tension: 100\n  },\n  timing: {\n    duration: 150,\n    easing: Easing.inOut(Easing.ease),\n    delay: 0\n  }\n};\n\ninterface SliderComponentProps extends SliderProps {\n  value: number;\n  minimumValue: number;\n  maximumValue: number;\n  step: number;\n  minimumTrackTintColor: string;\n  maximumTrackTintColor: string;\n  debugTouchArea: boolean;\n  animationType: ANIMATION_TYPES;\n  animateTransitions: boolean;\n  animationConfig: any;\n  onSlidingStart(): void;\n}\n\nclass Slider extends React.Component<SliderComponentProps> {\n  _panResponder: PanResponderInstance | null = null;\n  _previousLeft: number | null = null;\n  _store: {\n    [key: string]: { width: number; height: number; [x: string]: number };\n  } = {};\n\n  static defaultProps = {\n    value: 0,\n    minimumValue: 0,\n    maximumValue: 1,\n    step: 0,\n    minimumTrackTintColor: \"#009688\",\n    maximumTrackTintColor: \"#939393\",\n    debugTouchArea: false,\n    animationType: \"timing\",\n    animateTransitions: false\n  };\n\n  state = {\n    containerSize: { width: 0, height: 0 },\n    trackSize: { width: 0, height: 0 },\n    thumbSize: { width: 0, height: 0 },\n    allMeasured: false,\n    animatedValue: new Animated.Value(this.props.value)\n  };\n\n  constructor(props: SliderComponentProps) {\n    super(props);\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: this._handleStartShouldSetPanResponder,\n      onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder,\n      onPanResponderGrant: this._handlePanResponderGrant,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderRelease: this._handlePanResponderEnd,\n      onPanResponderTerminationRequest: this._handlePanResponderRequestEnd,\n      onPanResponderTerminate: this._handlePanResponderEnd\n    });\n  }\n\n  componentWillReceiveProps(nextProps: SliderComponentProps) {\n    const newValue = nextProps.value;\n\n    if (this.props.value !== newValue) {\n      if (this.props.animateTransitions) {\n        this._setCurrentValueAnimated(newValue);\n      } else {\n        this._setCurrentValue(newValue);\n      }\n    }\n  }\n\n  render() {\n    const {\n      minimumValue,\n      maximumValue,\n      minimumTrackTintColor,\n      maximumTrackTintColor,\n      thumbTintColor,\n      style,\n      debugTouchArea,\n      animationType,\n      ...other\n    } = this.props;\n    const { containerSize, thumbSize, allMeasured } = this.state;\n    const thumbLeft = this.state.animatedValue.interpolate({\n      inputRange: [minimumValue, maximumValue],\n      outputRange: I18nManager.isRTL\n        ? [0, -(containerSize.width - thumbSize.width)]\n        : [0, containerSize.width - thumbSize.width]\n      // extrapolate: 'clamp',\n    });\n    const minimumTrackWidth = this.state.animatedValue.interpolate({\n      inputRange: [minimumValue, maximumValue],\n      outputRange: [0, containerSize.width - thumbSize.width]\n      //extrapolate: 'clamp',\n    });\n\n    const valueVisibleStyle: ViewStyle = {};\n    if (!allMeasured) {\n      valueVisibleStyle.opacity = 0;\n    }\n\n    const minimumTrackStyle = {\n      position: \"absolute\",\n      width: Animated.add(minimumTrackWidth, thumbSize.width / 2),\n      backgroundColor: minimumTrackTintColor,\n      ...valueVisibleStyle\n    };\n\n    const touchOverflowStyle = this._getTouchOverflowStyle();\n\n    return (\n      <View\n        {...other}\n        onLayout={this._measureContainer}\n        style={[defaultStyles.container, style]}\n      >\n        <View\n          onLayout={this._measureTrack}\n          style={[\n            { backgroundColor: maximumTrackTintColor },\n            defaultStyles.track\n          ]}\n        />\n        <Animated.View style={[defaultStyles.track, minimumTrackStyle]} />\n        <Animated.View\n          onLayout={this._measureThumb}\n          style={[\n            { backgroundColor: thumbTintColor || minimumTrackTintColor },\n            defaultStyles.thumb,\n            {\n              transform: [{ translateX: thumbLeft }, { translateY: 0 }],\n              ...valueVisibleStyle\n            }\n          ]}\n        />\n        <View\n          style={[defaultStyles.touchArea, touchOverflowStyle]}\n          {...this._panResponder!.panHandlers}\n        >\n          {debugTouchArea === true &&\n            this._renderDebugThumbTouchRect(thumbLeft)}\n        </View>\n      </View>\n    );\n  }\n\n  _getPropsForComponentUpdate(props: SliderComponentProps) {\n    /* eslint-disable */\n    const {\n      value,\n      onValueChange,\n      onSlidingStart,\n      onSlidingComplete,\n      style,\n      ...otherProps\n    } = props;\n\n    return otherProps;\n    /* eslint-enable */\n  }\n\n  _handleStartShouldSetPanResponder: PanResponderCallbacks[\"onStartShouldSetPanResponder\"] = (\n    e,\n    gestureState\n  ) => {\n    // Should we become active when the user presses down on the thumb?\n    return this._thumbHitTest!(e, gestureState);\n  };\n\n  _handleMoveShouldSetPanResponder(/*e: Object, gestureState: Object*/): boolean {\n    // Should we become active when the user moves a touch over the thumb?\n    return false;\n  }\n\n  _handlePanResponderGrant: PanResponderCallbacks[\"onPanResponderGrant\"] = (\n    _e,\n    _gestureState\n  ) => {\n    this._previousLeft = this._getThumbLeft(this._getCurrentValue());\n    if (this.props.onSlidingStart) {\n      this.props.onSlidingStart();\n    }\n  };\n\n  _handlePanResponderMove: PanResponderCallbacks[\"onPanResponderMove\"] = (\n    _e,\n    gestureState\n  ) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this._setCurrentValue(this._getValue(gestureState));\n    if (this.props.onValueChange) {\n      this.props.onValueChange(this._getCurrentValue());\n    }\n  };\n\n  _handlePanResponderRequestEnd() {\n    // Should we allow another component to take over this pan?\n    return false;\n  }\n\n  _handlePanResponderEnd: PanResponderCallbacks[\"onPanResponderEnd\"] = (\n    e,\n    gestureState\n  ) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this._setCurrentValue(this._getValue(gestureState));\n    if (this.props.onSlidingComplete) {\n      this.props.onSlidingComplete(this._getCurrentValue());\n    }\n  };\n\n  _measureContainer = (x: LayoutChangeEvent) => {\n    this._handleMeasure(\"containerSize\", x);\n  };\n\n  _measureTrack = (x: LayoutChangeEvent) => {\n    this._handleMeasure(\"trackSize\", x);\n  };\n\n  _measureThumb = (x: LayoutChangeEvent) => {\n    this._handleMeasure(\"thumbSize\", x);\n  };\n\n  _handleMeasure = (name: string, x: LayoutChangeEvent) => {\n    const { width, height } = x.nativeEvent.layout;\n    const size = { width: width, height: height };\n\n    const currentSize = this._store[name];\n    if (\n      currentSize &&\n      width === currentSize.width &&\n      height === currentSize.height\n    ) {\n      return;\n    }\n    this._store[name] = size;\n\n    const store = this._store;\n    if (store.containerSize && store.trackSize && store.thumbSize) {\n      this.setState({\n        ...this.state,\n        containerSize: store.containerSize,\n        trackSize: store.trackSize,\n        thumbSize: store.thumbSize,\n        allMeasured: true\n      });\n    }\n  };\n\n  _getRatio = (value: number) => {\n    return (\n      (value - this.props.minimumValue) /\n      (this.props.maximumValue - this.props.minimumValue)\n    );\n  };\n\n  _getThumbLeft = (value: number) => {\n    const nonRtlRatio = this._getRatio(value);\n    const ratio = I18nManager.isRTL ? 1 - nonRtlRatio : nonRtlRatio;\n    return (\n      ratio * (this.state.containerSize.width - this.state.thumbSize.width)\n    );\n  };\n\n  _getValue = (gestureState: PanResponderGestureState) => {\n    const length = this.state.containerSize.width - this.state.thumbSize.width;\n    const thumbLeft = this._previousLeft! + gestureState.dx;\n\n    const nonRtlRatio = thumbLeft / length;\n    const ratio = I18nManager.isRTL ? 1 - nonRtlRatio : nonRtlRatio;\n\n    if (this.props.step) {\n      return Math.max(\n        this.props.minimumValue,\n        Math.min(\n          this.props.maximumValue,\n          this.props.minimumValue +\n            Math.round(\n              (ratio * (this.props.maximumValue - this.props.minimumValue)) /\n                this.props.step\n            ) *\n              this.props.step\n        )\n      );\n    }\n    return Math.max(\n      this.props.minimumValue,\n      Math.min(\n        this.props.maximumValue,\n        ratio * (this.props.maximumValue - this.props.minimumValue) +\n          this.props.minimumValue\n      )\n    );\n  };\n\n  _getCurrentValue = (): number => {\n    const val = (this.state.animatedValue as any)._value;\n    return val;\n  };\n\n  _setCurrentValue = (value: number) => {\n    this.state.animatedValue.setValue(value);\n  };\n\n  _setCurrentValueAnimated = (value: number) => {\n    const animationType = this.props.animationType;\n\n    const animationConfig = {\n      ...DEFAULT_ANIMATION_CONFIGS[animationType],\n      toValue: value\n    };\n\n    Animated[animationType](this.state.animatedValue, animationConfig).start();\n  };\n\n  _getTouchOverflowSize = () => {\n    const { allMeasured, thumbSize, containerSize } = this.state;\n\n    const size: Partial<LayoutRectangle> = {};\n    if (allMeasured === true) {\n      size.width = Math.max(0, THUMB_TOUCH_SIZE - thumbSize.width);\n      size.height = Math.max(0, THUMB_TOUCH_SIZE - containerSize.height);\n    }\n\n    return size;\n  };\n\n  _getTouchOverflowStyle = () => {\n    const { width, height } = this._getTouchOverflowSize();\n\n    const touchOverflowStyle: ViewStyle = {};\n    if (width !== undefined && height !== undefined) {\n      const verticalMargin = -height / 2;\n      touchOverflowStyle.marginTop = verticalMargin;\n      touchOverflowStyle.marginBottom = verticalMargin;\n\n      const horizontalMargin = -width / 2;\n      touchOverflowStyle.marginLeft = horizontalMargin;\n      touchOverflowStyle.marginRight = horizontalMargin;\n    }\n\n    if (this.props.debugTouchArea === true) {\n      touchOverflowStyle.backgroundColor = \"orange\";\n      touchOverflowStyle.opacity = 0.5;\n    }\n\n    return touchOverflowStyle;\n  };\n\n  _thumbHitTest: PanResponderCallbacks[\"onStartShouldSetPanResponderCapture\"] = ({\n    nativeEvent\n  }) => {\n    const thumbTouchRect = this._getThumbTouchRect();\n    const offset = getOffset();\n    return thumbTouchRect.containsPoint(\n      nativeEvent.locationX - offset.x,\n      nativeEvent.locationY - offset.y\n    );\n  };\n\n  _getThumbTouchRect = () => {\n    const { thumbSize, containerSize } = this.state;\n    const { width = 0, height = 0 } = this._getTouchOverflowSize();\n\n    return new Rect(\n      width / 2 +\n        this._getThumbLeft(this._getCurrentValue()) +\n        (thumbSize.width - THUMB_TOUCH_SIZE) / 2,\n      height / 2 + (containerSize.height - THUMB_TOUCH_SIZE) / 2,\n      THUMB_TOUCH_SIZE,\n      THUMB_TOUCH_SIZE\n    );\n  };\n\n  _renderDebugThumbTouchRect = (thumbLeft: Animated.AnimatedInterpolation) => {\n    const thumbTouchRect = this._getThumbTouchRect();\n    const positionStyle = {\n      left: thumbLeft,\n      top: thumbTouchRect.y,\n      width: thumbTouchRect.width,\n      height: thumbTouchRect.height\n    };\n\n    return (\n      <Animated.View\n        pointerEvents=\"none\"\n        style={[defaultStyles.debugThumbTouchArea, positionStyle]}\n      />\n    );\n  };\n}\n\nconst defaultStyles = StyleSheet.create({\n  container: {\n    height: 40,\n    justifyContent: \"center\"\n  },\n  track: {\n    height: TRACK_SIZE,\n    borderRadius: TRACK_SIZE / 2\n  },\n  thumb: {\n    position: \"absolute\",\n    width: THUMB_SIZE,\n    height: THUMB_SIZE,\n    borderRadius: THUMB_SIZE / 2\n  },\n  touchArea: {\n    position: \"absolute\",\n    backgroundColor: \"transparent\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  debugThumbTouchArea: {\n    position: \"absolute\",\n    backgroundColor: \"green\",\n    opacity: 0.5\n  }\n});\n\nexport default applyNativeMethods(Slider);\n\nclass Rect implements LayoutRectangle {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  containsPoint(x: number, y: number) {\n    return (\n      x >= this.x &&\n      y >= this.y &&\n      x <= this.x + this.width &&\n      y <= this.y + this.height\n    );\n  }\n}\n\nfunction getOffset() {\n  if (document.documentElement && document.documentElement.scrollTop) {\n    // Explorer 6 Strict\n    return {\n      x: document.documentElement.scrollLeft,\n      y: document.documentElement.scrollTop\n    };\n  }\n  // all other Explorers\n  return { x: document.body.scrollLeft, y: document.body.scrollTop };\n}\n"]},"metadata":{},"sourceType":"module"}