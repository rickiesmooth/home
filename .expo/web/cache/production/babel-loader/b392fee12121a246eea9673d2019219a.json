{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{canUseDOM}from'fbjs/lib/ExecutionEnvironment';import UAParser from'ua-parser-js';import uuidv4 from'uuid/v4';var parser=new UAParser();var ID_KEY='EXPO_CONSTANTS_INSTALLATION_ID';var _sessionId=uuidv4();export default{get name(){return'ExponentConstants';},get appOwnership(){return'expo';},get installationId(){var installationId;try{installationId=localStorage.getItem(ID_KEY);if(installationId==null||typeof installationId!=='string'){installationId=uuidv4();localStorage.setItem(ID_KEY,installationId);}}catch(error){installationId=_sessionId;}finally{return installationId;}},get sessionId(){return _sessionId;},get platform(){return{web:canUseDOM?UAParser(navigator.userAgent):undefined};},get isHeadless(){return false;},get isDevice(){return true;},get isDetached(){return false;},get expoVersion(){return this.manifest.sdkVersion||null;},get linkingUri(){if(canUseDOM){return location.origin+location.pathname;}else{return'';}},get expoRuntimeVersion(){return this.expoVersion;},get deviceName(){var _parser$getResult=parser.getResult(),browser=_parser$getResult.browser,engine=_parser$getResult.engine,OS=_parser$getResult.os;return browser.name||engine.name||OS.name||undefined;},get nativeAppVersion(){return null;},get nativeBuildVersion(){return null;},get systemFonts(){return[];},get statusBarHeight(){return 0;},get deviceYearClass(){return null;},get manifest(){return process.env.APP_MANIFEST||{};},get experienceUrl(){if(canUseDOM){return location.origin+location.pathname;}else{return'';}},get debugMode(){return __DEV__;},getWebViewUserAgentAsync:function getWebViewUserAgentAsync(){return _regeneratorRuntime.async(function getWebViewUserAgentAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!canUseDOM){_context.next=4;break;}return _context.abrupt(\"return\",navigator.userAgent);case 4:return _context.abrupt(\"return\",null);case 5:case\"end\":return _context.stop();}}});}};","map":{"version":3,"sources":["/home/rick/dev/cool-home/node_modules/expo-constants/build/ExponentConstants.web.js"],"names":["canUseDOM","UAParser","uuidv4","parser","ID_KEY","_sessionId","name","appOwnership","installationId","localStorage","getItem","setItem","error","sessionId","platform","web","navigator","userAgent","undefined","isHeadless","isDevice","isDetached","expoVersion","manifest","sdkVersion","linkingUri","location","origin","pathname","expoRuntimeVersion","deviceName","getResult","browser","engine","OS","os","nativeAppVersion","nativeBuildVersion","systemFonts","statusBarHeight","deviceYearClass","process","env","APP_MANIFEST","experienceUrl","debugMode","__DEV__","getWebViewUserAgentAsync"],"mappings":"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","sourcesContent":["import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport UAParser from 'ua-parser-js';\nimport uuidv4 from 'uuid/v4';\nconst parser = new UAParser();\nconst ID_KEY = 'EXPO_CONSTANTS_INSTALLATION_ID';\nconst _sessionId = uuidv4();\nexport default {\n    get name() {\n        return 'ExponentConstants';\n    },\n    get appOwnership() {\n        return 'expo';\n    },\n    get installationId() {\n        let installationId;\n        try {\n            installationId = localStorage.getItem(ID_KEY);\n            if (installationId == null || typeof installationId !== 'string') {\n                installationId = uuidv4();\n                localStorage.setItem(ID_KEY, installationId);\n            }\n        }\n        catch (error) {\n            installationId = _sessionId;\n        }\n        finally {\n            return installationId;\n        }\n    },\n    get sessionId() {\n        return _sessionId;\n    },\n    get platform() {\n        return { web: canUseDOM ? UAParser(navigator.userAgent) : undefined };\n    },\n    get isHeadless() {\n        return false;\n    },\n    get isDevice() {\n        // TODO: Bacon: Possibly want to add information regarding simulators\n        return true;\n    },\n    get isDetached() {\n        return false;\n    },\n    get expoVersion() {\n        return this.manifest.sdkVersion || null;\n    },\n    get linkingUri() {\n        if (canUseDOM) {\n            // On native this is `exp://`\n            return location.origin + location.pathname;\n        }\n        else {\n            return '';\n        }\n    },\n    get expoRuntimeVersion() {\n        return this.expoVersion;\n    },\n    get deviceName() {\n        const { browser, engine, os: OS } = parser.getResult();\n        return browser.name || engine.name || OS.name || undefined;\n    },\n    get nativeAppVersion() {\n        return null;\n    },\n    get nativeBuildVersion() {\n        return null;\n    },\n    get systemFonts() {\n        // TODO: Bacon: Maybe possible.\n        return [];\n    },\n    get statusBarHeight() {\n        return 0;\n    },\n    get deviceYearClass() {\n        // TODO: Bacon: The android version isn't very accurate either, maybe we could try and guess this value.\n        return null;\n    },\n    get manifest() {\n        // This is defined by @expo/webpack-config.\n        // If your site is bundled with a different config then you may not have access to the app.json automatically.\n        return process.env.APP_MANIFEST || {};\n    },\n    get experienceUrl() {\n        if (canUseDOM) {\n            return location.origin + location.pathname;\n        }\n        else {\n            return '';\n        }\n    },\n    get debugMode() {\n        return __DEV__;\n    },\n    async getWebViewUserAgentAsync() {\n        if (canUseDOM) {\n            return navigator.userAgent;\n        }\n        else {\n            return null;\n        }\n    },\n};\n//# sourceMappingURL=ExponentConstants.web.js.map"]},"metadata":{},"sourceType":"module"}