{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{ACTION_TYPES}from\"./interfaces\";export var initialState={loggedIn:null,id:\"\",username:\"\",hubToken:\"\"};export var reducer=function reducer(state,action){switch(action.type){case ACTION_TYPES.USER_LOGIN:return _objectSpread({},state,{loggedIn:!!action.data,id:action.data.id,hubToken:action.data.hubToken});default:throw new Error();}};","map":{"version":3,"sources":["/home/rick/dev/cool-home/src/store/user/reducers.tsx"],"names":["ACTION_TYPES","initialState","loggedIn","id","username","hubToken","reducer","state","action","type","USER_LOGIN","data","Error"],"mappings":"+0BAAA,OAAwBA,YAAxB,oBAEA,MAAO,IAAMC,CAAAA,YAAmB,CAAG,CACjCC,QAAQ,CAAE,IADuB,CAEjCC,EAAE,CAAE,EAF6B,CAGjCC,QAAQ,CAAE,EAHuB,CAIjCC,QAAQ,CAAE,EAJuB,CAA5B,CAOP,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAeC,MAAf,CAAyC,CAC9D,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKT,CAAAA,YAAY,CAACU,UAAlB,CACE,wBACKH,KADL,EAEEL,QAAQ,CAAE,CAAC,CAACM,MAAM,CAACG,IAFrB,CAGER,EAAE,CAAEK,MAAM,CAACG,IAAP,CAAYR,EAHlB,CAIEE,QAAQ,CAAEG,MAAM,CAACG,IAAP,CAAYN,QAJxB,GAOF,QACE,KAAM,IAAIO,CAAAA,KAAJ,EAAN,CAVJ,CAYD,CAbM","sourcesContent":["import { State, Action, ACTION_TYPES } from \"./interfaces\";\n\nexport const initialState: State = {\n  loggedIn: null,\n  id: \"\",\n  username: \"\",\n  hubToken: \"\"\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case ACTION_TYPES.USER_LOGIN:\n      return {\n        ...state,\n        loggedIn: !!action.data,\n        id: action.data.id,\n        hubToken: action.data.hubToken\n      };\n\n    default:\n      throw new Error();\n  }\n};\n"]},"metadata":{},"sourceType":"module"}