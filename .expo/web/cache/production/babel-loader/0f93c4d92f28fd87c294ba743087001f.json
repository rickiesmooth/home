{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _taggedTemplateLiteralLoose from\"@babel/runtime/helpers/taggedTemplateLiteralLoose\";function _templateObject(){var data=_taggedTemplateLiteralLoose([\"\\n  \",\"\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useContext}from\"react\";import Text from\"react-native-web/dist/exports/Text\";import Button from\"react-native-web/dist/exports/Button\";import CheckBox from\"react-native-web/dist/exports/CheckBox\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useMutation}from\"@apollo/react-hooks\";import gql from\"graphql-tag\";import{createGroup}from\"../../graphql/mutations\";import{ThingsContext}from\"../../store/things\";import{Controls}from\"../../components/Features/Controls/Controls\";import{group}from\"../../utils/group\";import{Container}from\"../../components/Elements/Container/Container\";import{UserContext}from\"../../store/user\";import{useNavigation}from\"@react-navigation/core\";import{Input}from\"../../components/Elements/Input/Input\";var ADD_GROUP=gql(_templateObject(),createGroup);export var CreateGroupScreen=function CreateGroupScreen(){var _useContext=useContext(ThingsContext),_useContext$state=_useContext.state,things=_useContext$state.things,loading=_useContext$state.loading,error=_useContext$state.error;var _useContext2=useContext(UserContext),id=_useContext2.state.id;var navigation=useNavigation();var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),groupName=_React$useState2[0],setGroupName=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),selected=_React$useState4[0],setSelected=_React$useState4[1];var _useMutation=useMutation(ADD_GROUP,{variables:{input:{name:groupName,devices:selected.map(function(_ref){var id=_ref.id;return id;}),groupAuthorId:id}},refetchQueries:[\"GetUser\"]}),_useMutation2=_slicedToArray(_useMutation,1),addGroup=_useMutation2[0];if(loading){return React.createElement(Text,null,\"loading\");}if(error){return React.createElement(Text,null,error);}return React.createElement(Container,null,React.createElement(View,null,React.createElement(Input,{placeholder:\"Group title...\",autoFocus:true,style:styles.input,onChangeText:setGroupName}),React.createElement(View,{style:styles.groupItem},React.createElement(CheckBox,{style:styles.checkBox,value:selected.length===things.length,onValueChange:function onValueChange(){return things.forEach(function(){return setSelected(things);});}}),React.createElement(Text,null,\"Select all\")),things.map(function(thing){var hasSelected=!!selected.find(function(selectedThing){return selectedThing.id===thing.id;});var handleValueChange=function handleValueChange(value){return setSelected(function(prev){return value?[].concat(_toConsumableArray(prev),[thing]):prev.filter(function(previousThing){return previousThing.id!==thing.id;});});};return React.createElement(View,{key:thing.id,style:styles.groupItem},React.createElement(CheckBox,{style:styles.checkBox,value:hasSelected,onValueChange:handleValueChange}),React.createElement(Text,null,thing.title),React.createElement(Controls,{properties:{on:thing.properties.on},values:thing.values,updateThing:thing.updateThing,style:styles.switch}));}),selected.length&&React.createElement(Text,null,\"Group properties\")||null,Object.values(group(selected,\"properties\")).map(function(props){return React.createElement(Text,{key:props.link},props.title);}),React.createElement(Button,{title:\"update\",disabled:!groupName||Object.entries(selected).length===0,onPress:function onPress(){addGroup();navigation.goBack();}})));};var styles=StyleSheet.create({checkBox:{marginRight:8},switch:{alignSelf:\"flex-end\",marginLeft:\"auto\"},input:{fontSize:24,marginVertical:16},groupItem:{paddingVertical:16,flexDirection:\"row\"}});","map":{"version":3,"sources":["/home/rick/dev/cool-home/src/screens/Home/CreateGroupScreen.tsx"],"names":["React","useContext","useMutation","gql","createGroup","ThingsContext","Controls","group","Container","UserContext","useNavigation","Input","ADD_GROUP","CreateGroupScreen","state","things","loading","error","id","navigation","useState","groupName","setGroupName","selected","setSelected","variables","input","name","devices","map","groupAuthorId","refetchQueries","addGroup","styles","groupItem","checkBox","length","forEach","thing","hasSelected","find","selectedThing","handleValueChange","value","prev","filter","previousThing","title","on","properties","values","updateThing","switch","Object","props","link","entries","goBack","StyleSheet","create","marginRight","alignSelf","marginLeft","fontSize","marginVertical","paddingVertical","flexDirection"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Text, Button, CheckBox, View, StyleSheet } from \"react-native\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CreateGroupMutationVariables } from \"../../graphql/API\";\nimport gql from \"graphql-tag\";\nimport { createGroup } from \"../../graphql/mutations\";\nimport { ThingsContext } from \"../../store/things\";\nimport { ThingModel } from \"../../store/things/interfaces\";\nimport { Controls } from \"../../components/Features/Controls/Controls\";\nimport { group } from \"../../utils/group\";\nimport { Container } from \"../../components/Elements/Container/Container\";\nimport { UserContext } from \"../../store/user\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { Input } from \"../../components/Elements/Input/Input\";\n\nconst ADD_GROUP = gql`\n  ${createGroup}\n`;\n\nexport const CreateGroupScreen = () => {\n  const {\n    state: { things, loading, error }\n  } = useContext(ThingsContext);\n  const {\n    state: { id }\n  } = useContext(UserContext);\n  const navigation = useNavigation();\n  const [groupName, setGroupName] = React.useState(\"\");\n  const [selected, setSelected] = React.useState<ThingModel[]>([]);\n  const [addGroup] = useMutation<CreateGroupMutationVariables>(ADD_GROUP, {\n    variables: {\n      input: {\n        name: groupName,\n        devices: selected.map(({ id }) => id),\n        groupAuthorId: id\n      }\n    },\n    refetchQueries: [\"GetUser\"]\n  });\n\n  if (loading) {\n    return <Text>loading</Text>;\n  }\n\n  if (error) {\n    return <Text>{error}</Text>;\n  }\n\n  return (\n    <Container>\n      <View>\n        <Input\n          placeholder=\"Group title...\"\n          autoFocus\n          style={styles.input}\n          onChangeText={setGroupName}\n        />\n        <View style={styles.groupItem}>\n          <CheckBox\n            style={styles.checkBox}\n            value={selected.length === things.length}\n            onValueChange={() => things.forEach(() => setSelected(things))}\n          />\n          <Text>Select all</Text>\n        </View>\n        {things.map(thing => {\n          const hasSelected = !!selected.find(\n            selectedThing => selectedThing.id === thing.id\n          );\n          const handleValueChange = (value: boolean) =>\n            setSelected(prev =>\n              value\n                ? [...prev, thing]\n                : prev.filter(previousThing => previousThing.id !== thing.id)\n            );\n\n          return (\n            <View key={thing.id} style={styles.groupItem}>\n              <CheckBox\n                style={styles.checkBox}\n                value={hasSelected}\n                onValueChange={handleValueChange}\n              />\n              <Text>{thing.title}</Text>\n              <Controls\n                properties={{ on: thing.properties.on }}\n                values={thing.values}\n                updateThing={thing.updateThing}\n                style={styles.switch}\n              />\n            </View>\n          );\n        })}\n        {(selected.length && <Text>Group properties</Text>) || null}\n        {Object.values(\n          group<ThingModel, \"properties\">(selected, \"properties\")\n        ).map(props => (\n          <Text key={props!.link}>{props!.title}</Text>\n        ))}\n        <Button\n          title=\"update\"\n          disabled={!groupName || Object.entries(selected).length === 0}\n          onPress={() => {\n            addGroup();\n            navigation.goBack();\n          }}\n        />\n      </View>\n    </Container>\n  );\n};\n\nconst styles = StyleSheet.create({\n  checkBox: {\n    marginRight: 8\n  },\n  switch: {\n    alignSelf: \"flex-end\",\n    marginLeft: \"auto\"\n  },\n  input: {\n    fontSize: 24,\n    marginVertical: 16\n  },\n  groupItem: {\n    paddingVertical: 16,\n    flexDirection: \"row\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}