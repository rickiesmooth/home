{"ast":null,"code":"import*as React from'react';import{useSubscription}from'use-subscription';import useNavigation from\"./useNavigation\";export default function useIsFocused(){var navigation=useNavigation();var getCurrentValue=React.useCallback(navigation.isFocused,[navigation]);var subscribe=React.useCallback(function(callback){var unsubscribeFocus=navigation.addListener('focus',function(){return callback(true);});var unsubscribeBlur=navigation.addListener('blur',function(){return callback(false);});return function(){unsubscribeFocus();unsubscribeBlur();};},[navigation]);return useSubscription({getCurrentValue:getCurrentValue,subscribe:subscribe});}","map":{"version":3,"sources":["/home/rick/dev/cool-home/node_modules/@react-navigation/core/lib/module/useIsFocused.js"],"names":["React","useSubscription","useNavigation","useIsFocused","navigation","getCurrentValue","useCallback","isFocused","subscribe","callback","unsubscribeFocus","addListener","unsubscribeBlur"],"mappings":"AAAA,MAAM,GAAIA,CAAAA,KAAV,KAAoB,OAApB,CAA4B,OAAOC,eAAP,KAA2B,kBAA3B,CAA8C,MAAOC,CAAAA,aAAP,uBAA2C,cAAe,SAASC,CAAAA,YAAT,EAAuB,CAAC,GAAIC,CAAAA,UAAU,CAACF,aAAa,EAA5B,CAA+B,GAAIG,CAAAA,eAAe,CAACL,KAAK,CAACM,WAAN,CAAkBF,UAAU,CAACG,SAA7B,CAAuC,CAACH,UAAD,CAAvC,CAApB,CAAyE,GAAII,CAAAA,SAAS,CAACR,KAAK,CAACM,WAAN,CAAkB,SAASG,QAAT,CAAkB,CAAC,GAAIC,CAAAA,gBAAgB,CAACN,UAAU,CAACO,WAAX,CAAuB,OAAvB,CAA+B,UAAU,CAAC,MAAOF,CAAAA,QAAQ,CAAC,IAAD,CAAf,CAAuB,CAAjE,CAArB,CAAwF,GAAIG,CAAAA,eAAe,CAACR,UAAU,CAACO,WAAX,CAAuB,MAAvB,CAA8B,UAAU,CAAC,MAAOF,CAAAA,QAAQ,CAAC,KAAD,CAAf,CAAwB,CAAjE,CAApB,CAAuF,MAAO,WAAU,CAACC,gBAAgB,GAAGE,eAAe,GAAI,CAAxD,CAA0D,CAA9Q,CAA+Q,CAACR,UAAD,CAA/Q,CAAd,CAA2S,MAAOH,CAAAA,eAAe,CAAC,CAACI,eAAe,CAACA,eAAjB,CAAiCG,SAAS,CAACA,SAA3C,CAAD,CAAtB,CAA+E","sourcesContent":["import*as React from'react';import{useSubscription}from'use-subscription';import useNavigation from'./useNavigation';export default function useIsFocused(){var navigation=useNavigation();var getCurrentValue=React.useCallback(navigation.isFocused,[navigation]);var subscribe=React.useCallback(function(callback){var unsubscribeFocus=navigation.addListener('focus',function(){return callback(true);});var unsubscribeBlur=navigation.addListener('blur',function(){return callback(false);});return function(){unsubscribeFocus();unsubscribeBlur();};},[navigation]);return useSubscription({getCurrentValue:getCurrentValue,subscribe:subscribe});}\n//# sourceMappingURL=useIsFocused.js.map"]},"metadata":{},"sourceType":"module"}