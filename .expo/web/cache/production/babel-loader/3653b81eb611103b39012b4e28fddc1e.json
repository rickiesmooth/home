{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React from\"react\";import{UserProvider}from\"./store/user\";import AWSAppSyncClient,{AUTH_TYPE}from\"aws-appsync\";import{ApolloProvider}from\"@apollo/react-common\";import{ThingsProvider}from\"./store/things\";import Amplify from\"@aws-amplify/core\";import Auth from\"@aws-amplify/auth\";import awsconfig from\"./aws-exports\";import Root from\"./navigation\";Amplify.configure(awsconfig);export var client=new AWSAppSyncClient({url:awsconfig.aws_appsync_graphqlEndpoint,disableOffline:true,region:awsconfig.aws_appsync_region,auth:{type:AUTH_TYPE.AMAZON_COGNITO_USER_POOLS,jwtToken:function jwtToken(){return _regeneratorRuntime.async(function jwtToken$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(Auth.currentSession());case 2:return _context.abrupt(\"return\",_context.sent.getIdToken().getJwtToken());case 3:case\"end\":return _context.stop();}}});}}});export default(function(){return React.createElement(ApolloProvider,{client:client},React.createElement(UserProvider,null,React.createElement(ThingsProvider,null,React.createElement(Root,null))));});","map":{"version":3,"sources":["/home/rick/dev/cool-home/src/App.tsx"],"names":["React","UserProvider","AWSAppSyncClient","AUTH_TYPE","ApolloProvider","ThingsProvider","Amplify","Auth","awsconfig","Root","configure","client","url","aws_appsync_graphqlEndpoint","disableOffline","region","aws_appsync_region","auth","type","AMAZON_COGNITO_USER_POOLS","jwtToken","currentSession","getIdToken","getJwtToken"],"mappings":"4DAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,oBACA,MAAOC,CAAAA,gBAAP,EAA2BC,SAA3B,KAA4C,aAA5C,CACA,OAASC,cAAT,KAA+B,sBAA/B,CACA,OAASC,cAAT,sBACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,SAAP,qBACA,MAAOC,CAAAA,IAAP,oBAEAH,OAAO,CAACI,SAAR,CAAkBF,SAAlB,EAEA,MAAO,IAAMG,CAAAA,MAAM,CAAG,GAAIT,CAAAA,gBAAJ,CAAqB,CACzCU,GAAG,CAAEJ,SAAS,CAACK,2BAD0B,CAEzCC,cAAc,CAAE,IAFyB,CAGzCC,MAAM,CAAEP,SAAS,CAACQ,kBAHuB,CAIzCC,IAAI,CAAE,CACJC,IAAI,CAAEf,SAAS,CAACgB,yBADZ,CAEJC,QAAQ,CAAE,uLACDb,IAAI,CAACc,cAAL,EADC,uDACsBC,UADtB,GACmCC,WADnC,kDAFN,CAJmC,CAArB,CAAf,CAWP,eAAe,iBACb,qBAAC,cAAD,EAAgB,MAAM,CAAEZ,MAAxB,EACE,oBAAC,YAAD,MACE,oBAAC,cAAD,MACE,oBAAC,IAAD,MADF,CADF,CADF,CADa,EAAf","sourcesContent":["import React from \"react\";\nimport { UserProvider } from \"./store/user\";\nimport AWSAppSyncClient, { AUTH_TYPE } from \"aws-appsync\";\nimport { ApolloProvider } from \"@apollo/react-common\";\nimport { ThingsProvider } from \"./store/things\";\nimport Amplify from \"@aws-amplify/core\";\nimport Auth from \"@aws-amplify/auth\";\nimport awsconfig from \"./aws-exports\";\nimport Root from \"./navigation\";\n\nAmplify.configure(awsconfig);\n\nexport const client = new AWSAppSyncClient({\n  url: awsconfig.aws_appsync_graphqlEndpoint,\n  disableOffline: true,\n  region: awsconfig.aws_appsync_region,\n  auth: {\n    type: AUTH_TYPE.AMAZON_COGNITO_USER_POOLS,\n    jwtToken: async () =>\n      (await Auth.currentSession()).getIdToken().getJwtToken()\n  }\n});\n\nexport default () => (\n  <ApolloProvider client={client}>\n    <UserProvider>\n      <ThingsProvider>\n        <Root />\n      </ThingsProvider>\n    </UserProvider>\n  </ApolloProvider>\n);\n"]},"metadata":{},"sourceType":"module"}