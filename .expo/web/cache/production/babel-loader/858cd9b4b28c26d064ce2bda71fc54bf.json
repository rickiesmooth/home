{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _taggedTemplateLiteralLoose from\"@babel/runtime/helpers/taggedTemplateLiteralLoose\";function _templateObject(){var data=_taggedTemplateLiteralLoose([\"\\n  \",\"\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import*as React from\"react\";import View from\"react-native-web/dist/exports/View\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{createStackNavigator,HeaderBackButton}from\"@react-navigation/stack\";import{useLazyQuery}from\"@apollo/react-hooks\";import Auth from\"@aws-amplify/auth\";import{Hub}from\"@aws-amplify/core\";import TabNavigator from\"./BottomTabs\";import{SignInNavigator}from\"../screens/SignInScreen\";import{UserContext}from\"../store/user\";import gql from\"graphql-tag\";import{getUser}from\"../graphql/queries\";import{ThingsContext}from\"../store/things\";var SplashScreen=function SplashScreen(){return React.createElement(View,{style:styles.content},React.createElement(ActivityIndicator,null));};var SimpleStack=createStackNavigator();var GET_USER=gql(_templateObject(),getUser);export default function AuthStackScreen(_ref){var navigation=_ref.navigation;var _React$useState=React.useState(undefined),_React$useState2=_slicedToArray(_React$useState,2),userId=_React$useState2[0],setUserId=_React$useState2[1];var _useLazyQuery=useLazyQuery(GET_USER,{variables:{id:userId}}),_useLazyQuery2=_slicedToArray(_useLazyQuery,2),getUser=_useLazyQuery2[0],_useLazyQuery2$=_useLazyQuery2[1],loading=_useLazyQuery2$.loading,data=_useLazyQuery2$.data;var _React$useState3=React.useState(true),_React$useState4=_slicedToArray(_React$useState3,2),isLoading=_React$useState4[0],setIsLoading=_React$useState4[1];var _React$useContext=React.useContext(UserContext),_React$useContext$sta=_React$useContext.state,loggedIn=_React$useContext$sta.loggedIn,hubToken=_React$useContext$sta.hubToken,login=_React$useContext.actions.login;var _React$useContext2=React.useContext(ThingsContext),initThings=_React$useContext2.actions.initThings;React.useEffect(function(){Hub.listen(\"auth\",function(_ref2){var _ref2$payload=_ref2.payload,event=_ref2$payload.event,data=_ref2$payload.data;console.log(event,data);switch(event){case\"signIn\":handleSignin(data.attributes.sub);break;case\"signIn_failure\":case\"signOut\":setUserId(undefined);setIsLoading(false);break;}});Auth.currentSession().then(function(data){var isAdmin=data.getAccessToken().payload[\"cognito:groups\"].some(function(group){return group===\"admin\";});console.log(\"admin is\",isAdmin);});Auth.currentAuthenticatedUser().then(function(_ref3){var sub=_ref3.attributes.sub;return handleSignin(sub);}).catch(function(e){setIsLoading(false);console.log(\"Not signed in\",e);});},[]);React.useMemo(function(){loggedIn&&setIsLoading(false);},[loggedIn]);React.useEffect(function(){hubToken&&initThings();},[loggedIn]);function handleSignin(id){setUserId(id);getUser();}if(data&&!loggedIn){login(data.getUser);}var canGoBack=navigation.canGoBack();return React.createElement(SimpleStack.Navigator,{screenOptions:{headerLeft:function headerLeft(){return canGoBack?React.createElement(HeaderBackButton,{onPress:navigation.goBack}):null;}}},isLoading?React.createElement(SimpleStack.Screen,{name:\"splash\",component:SplashScreen,options:{title:\"loading...\"}}):userId===undefined?React.createElement(SimpleStack.Screen,{name:\"sign-in\",options:{header:null}},function(){return React.createElement(SignInNavigator,null);}):React.createElement(SimpleStack.Screen,{name:\"app\",options:{header:null}},function(){return React.createElement(TabNavigator,null);}));}var styles=StyleSheet.create({content:{flex:1,padding:16,justifyContent:\"center\"}});","map":{"version":3,"sources":["/home/rick/dev/cool-home/src/navigation/AuthFlow.tsx"],"names":["React","createStackNavigator","HeaderBackButton","useLazyQuery","Auth","Hub","TabNavigator","SignInNavigator","UserContext","gql","getUser","ThingsContext","SplashScreen","styles","content","SimpleStack","GET_USER","AuthStackScreen","navigation","useState","undefined","userId","setUserId","variables","id","loading","data","isLoading","setIsLoading","useContext","state","loggedIn","hubToken","login","actions","initThings","useEffect","listen","payload","event","console","log","handleSignin","attributes","sub","currentSession","then","isAdmin","getAccessToken","some","group","currentAuthenticatedUser","catch","e","useMemo","canGoBack","headerLeft","goBack","title","header","StyleSheet","create","flex","padding","justifyContent"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { View, ActivityIndicator, StyleSheet } from \"react-native\";\nimport { ParamListBase } from \"@react-navigation/core\";\nimport {\n  createStackNavigator,\n  HeaderBackButton,\n  StackNavigationProp\n} from \"@react-navigation/stack\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\nimport Auth from \"@aws-amplify/auth\";\nimport { Hub } from \"@aws-amplify/core\";\nimport TabNavigator from \"./BottomTabs\";\nimport { SignInNavigator } from \"../screens/SignInScreen\";\nimport { UserContext } from \"../store/user\";\nimport gql from \"graphql-tag\";\nimport { getUser } from \"../graphql/queries\";\nimport { ThingsContext } from \"../store/things\";\n\ntype AuthStackParams = {\n  splash: undefined;\n  app: undefined;\n  \"sign-in\": undefined;\n};\n\nconst SplashScreen = () => (\n  <View style={styles.content}>\n    <ActivityIndicator />\n  </View>\n);\n\nconst SimpleStack = createStackNavigator<AuthStackParams>();\n\ntype Props = {\n  navigation: StackNavigationProp<ParamListBase>;\n};\n\nconst GET_USER = gql`\n  ${getUser}\n`;\n\nexport default function AuthStackScreen({ navigation }: Props) {\n  const [userId, setUserId] = React.useState<string | undefined>(undefined);\n  const [getUser, { loading, data }] = useLazyQuery(GET_USER, {\n    variables: { id: userId }\n  });\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  const {\n    state: { loggedIn, hubToken },\n    actions: { login }\n  } = React.useContext(UserContext);\n  const {\n    actions: { initThings }\n  } = React.useContext(ThingsContext);\n\n  // retrieve auth info from cognito\n  React.useEffect(() => {\n    Hub.listen(\"auth\", ({ payload: { event, data } }) => {\n      console.log(event, data);\n      switch (event) {\n        case \"signIn\":\n          handleSignin(data.attributes.sub);\n          break;\n        case \"signIn_failure\":\n        case \"signOut\":\n          setUserId(undefined);\n          setIsLoading(false);\n          break;\n      }\n    });\n    Auth.currentSession().then(data => {\n      const isAdmin = data\n        .getAccessToken()\n        .payload[\"cognito:groups\"].some((group: string) => group === \"admin\");\n      console.log(\"admin is\", isAdmin);\n    });\n\n    Auth.currentAuthenticatedUser()\n      .then(({ attributes: { sub } }) => handleSignin(sub))\n      .catch(e => {\n        setIsLoading(false);\n        console.log(\"Not signed in\", e);\n      });\n  }, []);\n\n  React.useMemo(() => {\n    loggedIn && setIsLoading(false);\n  }, [loggedIn]);\n\n  // initialize things when we have hubToken from loggedin user\n  React.useEffect(() => {\n    hubToken && initThings();\n  }, [loggedIn]);\n\n  function handleSignin(id: string) {\n    setUserId(id);\n    getUser();\n  }\n\n  if (data && !loggedIn) {\n    login(data.getUser);\n  }\n\n  const canGoBack = navigation.canGoBack();\n\n  return (\n    <SimpleStack.Navigator\n      screenOptions={{\n        headerLeft: () =>\n          canGoBack ? <HeaderBackButton onPress={navigation.goBack} /> : null\n      }}\n    >\n      {isLoading ? (\n        <SimpleStack.Screen\n          name=\"splash\"\n          component={SplashScreen}\n          options={{ title: \"loading...\" }}\n        />\n      ) : userId === undefined ? (\n        <SimpleStack.Screen name=\"sign-in\" options={{ header: null }}>\n          {() => <SignInNavigator />}\n        </SimpleStack.Screen>\n      ) : (\n        <SimpleStack.Screen name=\"app\" options={{ header: null }}>\n          {() => <TabNavigator />}\n        </SimpleStack.Screen>\n      )}\n    </SimpleStack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    padding: 16,\n    justifyContent: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}